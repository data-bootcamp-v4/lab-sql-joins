/* 1. List the number of films per category. */
SELECT category_id, COUNT(film_id) AS films_per_category
FROM sakila.film_category
GROUP BY category_id;

/* 2. Retrieve the store ID, city, and country for each store. */
SELECT sakila.store.store_id, sakila.city.city, sakila.country.country
FROM sakila.store, sakila.address, sakila.city, sakila.country
WHERE sakila.store.address_id = sakila.address.address_id
AND sakila.address.city_id = sakila.city.city_id
AND sakila.city.country_id = sakila.country.country_id;

/* 3. Calculate the total revenue generated by each store in dollars. */
SELECT store_id, SUM(sakila.payment.amount) AS revenue_each_store
FROM sakila.payment
INNER JOIN sakila.staff
ON sakila.payment.staff_id = sakila.staff.staff_id
GROUP BY store_id;

/* 4. Determine the average running time of films for each category. */
SELECT category_id, AVG(sakila.film.length) AS avg_time_films
FROM sakila.film
INNER JOIN sakila.film_category
ON sakila.film.film_id = sakila.film_category.film_id
GROUP BY category_id;

/* 5. Identify the film categories with the longest average running time. */
SELECT category_id, AVG(sakila.film.length) AS avg_time_films
FROM sakila.film
INNER JOIN sakila.film_category
ON sakila.film.film_id = sakila.film_category.film_id
GROUP BY category_id
ORDER BY avg_time_films DESC;

/* 6. Display the top 10 most frequently rented movies in descending order. */
SELECT title, COUNT(sakila.inventory.film_id) AS most_freq_movies
FROM sakila.film
INNER JOIN sakila.inventory
ON sakila.film.film_id = sakila.inventory.film_id
GROUP BY title
ORDER BY most_freq_movies DESC
LIMIT 10;

/* 7. Determine if "Academy Dinosaur" can be rented from Store 1. */
SELECT COUNT(*) AS available
FROM sakila.inventory
JOIN sakila.film
ON sakila.inventory.film_id = sakila.film.film_id
JOIN sakila.store
ON sakila.inventory.store_id = sakila.store.store_id
WHERE sakila.film.title = "Academy Dinosaur"
AND sakila.store.store_id = 1;