/*1 - List numers film per category
/*category_id is the  relation* between category and film_category*/

SELECT category.category_id, category.name AS category, COUNT(film.film_id) AS num_films
FROM category
INNER JOIN film_category 
ON category.category_id = film_category.category_id
INNER JOIN film 
ON film_category.film_id = film.film_id
GROUP BY category.category_id, category.name;

/*2 - store ID, city, and country for each store.
SELECT * FROM sakila.store;
SELECT * FROM sakila.address;
SELECT * FROM sakila.city;
SELECT * FROM sakila.country;*/

SELECT store.store_id, city.city, country.country
FROM store
INNER JOIN address 
ON store.address_id = address.address_id
INNER JOIN city 
ON address.city_id = city.city_id
INNER JOIN country 
ON city.country_id = country.country_id;

/* 3- Calculate the total revenue generated by each store in dollars.*/
SELECT store_id, SUM(amount) AS total_revenueUSD
FROM sakila.payment
INNER JOIN sakila.rental
ON payment.rental_id = rental.rental_id
INNER JOIN sakila.staff
ON rental.staff_id = staff.staff_id
GROUP BY store_id;


/*4 - Determine the average running time of films for each category.
SELECT * FROM sakila.film;
SELECT * FROM sakila.film_category;
SELECT * FROM sakila.category;*/

SELECT category.name AS category, AVG(film.length) AS average_duration
FROM film
INNER JOIN film_category 
ON film.film_id = film_category.film_id
INNER JOIN category 
ON film_category.category_id = category.category_id
GROUP BY category.name;

/*5- Identify the film categories with the longest average running time.*/
SELECT category.name AS category, AVG(film.length) AS average_duration
FROM film
INNER JOIN film_category 
ON film.film_id = film_category.film_id
INNER JOIN category 
ON film_category.category_id = category.category_id
GROUP BY category.name
ORDER BY average_duration DESC;

/*6 - Display the top 10 most frequently rented movies in descending order.*/
SELECT film.film_id, film.title, COUNT(rental.rental_id) AS rental_count
FROM film
INNER JOIN inventory 
ON film.film_id = inventory.film_id
INNER JOIN rental 
ON inventory.inventory_id = rental.inventory_id
GROUP BY film.film_id, film.title
ORDER BY rental_count DESC
LIMIT 10;

/*7 - Determine if "Academy Dinosaur" can be rented from Store 1.*/
SELECT film.film_id, film.title, store_id
FROM sakila.film
INNER JOIN sakila.inventory
ON film.film_id = inventory.inventory_id
WHERE film.title = 'Academy Dinosaur';